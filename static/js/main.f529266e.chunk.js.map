{"version":3,"sources":["components/navigation/Navigation.module.css","redux/pb-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/userMenu/UserMenu.module.css","components/header/Header.module.css","routes.js","redux/auth/auth-selectors.js","components/navigation/Navigation.js","components/authNav/AuthNav.js","components/userMenu/UserMenu.js","components/header/Header.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/pb-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","patchContactRequest","patchContactSuccess","patchContactError","axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","login","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","routes","home","contacts","authSelectors","getIsAuthenticated","state","isAuthenticated","getUserName","user","name","Navigation","useSelector","className","styles","navLink","activeClassName","active","exact","to","AuthNav","UserMenu","useDispatch","logout","useCallback","divUserMenu","span","btnExit","type","onClick","Header","header","PrivateRoute","redirectTo","children","routeProps","isLoggedIn","PublicRoute","restricted","HomeView","lazy","PhoneBook","Login","Register","App","useEffect","fallback","path","createReducer","_","payload","filter","id","action","combineReducers","initialUserState","email","error","authReducer","midleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","phoneBook","phoneBookReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f529266e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__3NBMf\",\"active\":\"Navigation_active__2h6po\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactsuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactsuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactsuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contact/Change_Filter\");\n\nexport const patchContactRequest = createAction(\"contacts/patchcontactRequest\");\nexport const patchContactSuccess = createAction(\"contacts/patchContactSuccess\");\nexport const patchContactError = createAction(\"contacts/patchContactError\");\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst login = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst authOperations = {\n  register,\n  login,\n  logOut,\n  getCurrentUser,\n};\n\nexport default authOperations;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSoccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSoccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCerrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCerrentUserSoccess\");\nconst getCurrentUserError = createAction(\"auth/getCerrentUserError\");\n\nconst authActions = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default authActions;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divUserMenu\":\"UserMenu_divUserMenu__1xajS\",\"span\":\"UserMenu_span__4l27C\",\"btnExit\":\"UserMenu_btnExit__1E9Qm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1MOL-\"};","const routes = {\n  home: \"/\",\n  register: \"/register\",\n  login: \"/login\",\n  contacts: \"/contacts\",\n};\n\nexport default routes;\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\nconst getUserName = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsAuthenticated,\n  getUserName,\n};\n\nexport default authSelectors;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport styles from \"./Navigation.module.css\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nexport default function Navigation() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <nav>\n      <NavLink\n        className={styles.navLink}\n        activeClassName={styles.active}\n        exact\n        to={routes.home}\n      >\n        Home\n      </NavLink>\n      {isAuthenticated && (\n        <NavLink\n          className={styles.navLink}\n          activeClassName={styles.active}\n          to={routes.contacts}\n        >\n          PhoneBook\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../navigation/Navigation.module.css\";\nimport routes from \"../../routes\";\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      className={styles.navLink}\n      activeClassName={styles.active}\n      to={routes.login}\n    >\n      Login\n    </NavLink>\n\n    <NavLink\n      className={styles.navLink}\n      activeClassName={styles.active}\n      to={routes.register}\n    >\n      Register\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport styles from \"./UserMenu.module.css\";\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const logout = useCallback(() => dispatch(authOperations.logOut()), [\n    dispatch,\n  ]);\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div className={styles.divUserMenu}>\n      <span className={styles.span}>Welcome, {name}!</span>\n      <button className={styles.btnExit} type=\"button\" onClick={logout}>\n        Exit\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Navigations from \"../navigation\";\nimport AuthNav from \"../authNav\";\nimport UserMenu from \"../userMenu\";\nimport styles from \"./Header.module.css\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nexport default function Header() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <header className={styles.header}>\n      <Navigations />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\nimport { useSelector } from \"react-redux\";\n\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nexport default function PublicRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport { Switch } from \"react-router-dom\";\nimport Header from \"./components/header\";\nimport routes from \"./routes\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(\n  () => import(\"./views/home\") /*webpackChunkName: 'home-view' */\n);\nconst PhoneBook = lazy(\n  () => import(\"./views/phoneBook\") /*webpackChunkName: 'contacts-view' */\n);\nconst Login = lazy(\n  () => import(\"./views/login\") /*webpackChunkName: 'login-view' */\n);\nconst Register = lazy(\n  () => import(\"./views/register\") /*webpackChunkName: 'register-view' */\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Header />\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Switch>\n          <PublicRoute exact path={routes.home}>\n            <HomeView />\n          </PublicRoute>\n\n          <PrivateRoute path={routes.contacts} redirectTo={routes.login}>\n            <PhoneBook />\n          </PrivateRoute>\n\n          <PublicRoute\n            path={routes.login}\n            restricted\n            redirectTo={routes.contacts}\n          >\n            <Login />\n          </PublicRoute>\n\n          <PublicRoute\n            path={routes.register}\n            restricted\n            redirectTo={routes.contacts}\n          >\n            <Register />\n          </PublicRoute>\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n  patchContactSuccess,\n} from \"./pb-actions\";\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [patchContactSuccess]: (state, { payload }) => [...state, payload],\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n  [deleteContactSuccess]: (state, action) => (action.payload = \"\"),\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nconst authReducer = combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n\nexport default authReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport phoneBookReducer from \"./pb-reducer\";\nimport authReducer from \"./auth/auth-reducer\";\nimport storage from \"redux-persist/lib/storage\";\n// import persistStore from \"redux-persist/es/persistStore\";\n\nconst midleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phoneBook: phoneBookReducer,\n  },\n  midleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nconst storePersistor = { store, persistor };\n\nexport default storePersistor;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/base.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}